/*ــــــــــــــــــــــــــــــــــــــــــــــــــــــــــ
# setting
ــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــ*/
.setting {
  position: relative;
  width: 100%;
  min-height: calc(100vh - 62px);
  padding-top: var(--main-padding-top);
  padding-bottom: var(--main-padding-bottom);
  transition: var(--main-transition);
  overflow: hidden;
} /*ــــــــــــــــــــــــــــــــــــــــــــــــــــــــــ
# setting container 
ــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــ*/
.setting .container {
  position: relative;
  display: flex;
  gap: 20px;
}
@media (max-width: 992px) {
  .setting .container {
    flex-direction: column;
    align-items: center;
  }
}
.setting::before,
.setting::after {
  position: absolute;
  content: "";
  width: 200px;
  height: 200px;
  background-repeat: no-repeat;
  background-size: contain;
  filter: brightness(300%);
}
.setting::before {
  top: 0;
  right: 15px;
  background-image: url("../../../Assets/Images/Line1.png");
}
.setting::after {
  bottom: 10px;
  left: 15px;
  background-image: url("../../../Assets/Images/Line2.png");
}
@media (max-width: 776px) {
  .setting::before,
  .setting::after {
    width: 100px;
    height: 100px;
  }
}
/*ــــــــــــــــــــــــــــــــــــــــــــــــــــــــــ
# setting loading
ــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــ*/
.setting .loading-data {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  width: 100%;
  min-height: calc(100vh - 62px);
  gap: 10px;
}
.setting .loading-data .player-loading {
  position: relative;
  width: 250px;
  height: auto;
  max-width: 100%;
}

/*ــــــــــــــــــــــــــــــــــــــــــــــــــــــــــ
# setting container left
ــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــ*/
.setting .left {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 10px;
  width: fit-content;
  height: fit-content;
  transition: var(--main-transition);
}
.setting .left.active::before {
  position: absolute;
  content: "";
  background-image: url("../../../Assets/Images/Arrowline.png");
  width: 100px;
  height: 150px;
  top: 40%;
  left: -50%;
  background-size: contain;
  background-repeat: no-repeat;
  filter: brightness(300%);
  z-index: 1;
  transform: rotateY(180deg) rotateX(180deg) translate(-50%, -50%);
  animation: uparrow 1.2s ease-in-out alternate-reverse infinite;
}
@keyframes uparrow {
  from {
    transform: rotateY(180deg) rotateX(180deg) translate(-50%, -50%)
      rotate(10deg);
  }
  to {
    transform: rotateY(180deg) rotateX(180deg) translate(-50%, -50%);
  }
}
.setting .left .input-box {
  position: relative;
  border-radius: 0.5em;
  transition: var(--main-transition);
  width: 300px;
  height: 300px;
  max-width: 100%;
  max-height: 100%;
}
.setting .left .input-box i {
  position: absolute;
  bottom: 25px;
  right: 25px;
  font-size: 16px;
  font-weight: bolder;
  color: var(--main-p-color);
  box-shadow: var(--main-box-shadow);
  cursor: pointer;
  width: 35px;
  height: 35px;
  border-radius: 0.5em;
  background-color: var(--input-color);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0.7;
  transition: var(--main-transition);
  z-index: 10;
}
.setting .left .input-box i:hover {
  background-color: var(--primary-color);
  color: var(--white-color);
  opacity: 1;
}
.setting .left .input-box label {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 0.5em;
  background-color: rgba(0, 0, 0, 0.1);
  padding: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  font-size: 16px;
  font-weight: bold;
  backdrop-filter: blur(15px);
  color: var(--primary-dark-color);
  transition: var(--main-transition);
  z-index: 1;
  opacity: 0;
}
.setting .left .input-box:hover label {
  opacity: 1;
}

.setting .left img {
  position: relative;
  border-radius: 0.5em;
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: var(--main-transition);
  box-shadow: var(--main-box-shadow);
}
.setting .left .progress-bar {
  position: relative;
  width: 300px;
  height: 10px;
  background-color: var(--input-color);
  border-radius: 0.5em;
  overflow: hidden;
  transition: var(--main-transition);
}
.setting .left .progress-bar span {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  background-color: var(--primary-color);
  transition: var(--main-transition);
}
.setting .left button {
  position: relative;
  width: 100%;
  padding: 10px 12px;
  border: 0;
  cursor: pointer;
  background-color: var(--primary-color);
  color: var(--white-color);
  box-shadow: var(--blue-box-shadow);
  border-radius: 10px;
  transition: var(--main-transition);
}

/*ــــــــــــــــــــــــــــــــــــــــــــــــــــــــــ
# setting container right
ــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــ*/
.setting .container .right {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 10px;
  width: 100%;
  transition: var(--main-transition);
  z-index: 1;
}
.setting .container .right .input-box-two {
  position: relative;
  display: flex;
  align-items: center;
  gap: 10px;
}
@media (max-width: 776px) {
  .setting .container .right .input-box-two {
    flex-direction: column;
  }
}
.setting .container .right .input-box {
  position: relative;
  display: flex;
  width: 100%;
  flex-direction: column;
  gap: 10px;
}
.setting .container .right .input-box label {
  position: relative;
  font-weight: bold;
  color: var(--main-p-color);
  transition: var(--main-transition);
  padding: 0 10px;
}
.setting .container .right .input-box input,
.setting .container .right .input-box textarea {
  position: relative;
  width: 100%;
  border: 0;
  padding: 10px;
  border-radius: 10px;
  color: var(--primary-dark-color);
  height: 50px;
  background: var(--input-color);
  transition: var(--main-transition);
}
.setting .container .right .input-box textarea {
  position: relative;
  resize: none;
  height: 150px;
}
.setting .container .right .input-box button {
  position: relative;
  width: 100%;
  padding: 10px 12px;
  border: 0;
  cursor: pointer;
  background-color: var(--primary-color);
  color: var(--white-color);
  box-shadow: var(--blue-box-shadow);
  border-radius: 10px;
  transition: var(--main-transition);
}
/*ــــــــــــــــــــــــــــــــــــــــــــــــــــــــــ
# setting container right split
ــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــ*/
.setting .right .split {
  position: relative;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: var(--main-transition);
}
.setting .right .split p {
  color: var(--main-p-color);
  font-size: 16px;
  padding: 0 20px;
  font-weight: bold;
  transition: var(--main-transition);
}
.setting .right .split::before,
.setting .right .split::after {
  position: absolute;
  content: "";
  width: 40%;
  height: 1px;
  background-color: var(--main-p-color);
}
@media (max-width: 776px) {
  .setting .right .split::before,
  .setting .right .split::after {
    width: 30%;
  }
}
.setting .right .split::before {
  left: 0;
}
.setting .right .split::after {
  right: 0;
}
